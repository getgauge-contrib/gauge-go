name: deploy
concurrency:
  group: production
  cancel-in-progress: true

on:
  workflow_dispatch:

jobs:
  deploy:
    name: deploy gauge-go
    runs-on: ubuntu-latest
    environment: production
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
        id: go

      - name: build
        run: |
          go run build/make.go --all-platforms
          go run build/make.go --all-platforms --distro

      - name: update
        run: |
          cd deploy
          if [ -z "$version" ]; then
            version=$(grep '"version"' ../go.json | sed 's/"version":[[:space:]]*"//' | sed 's/",//' | tr -d [:space:])
          fi
          echo "VERSION=$version" >> $GITHUB_ENV
          artifacts=()
          dir=`pwd`
          for i in `ls *.zip`; do
              artifacts+="$dir/$i "
          done
          cd ..
          echo "---------------------------"
          echo "Updating release v$version"
          echo "---------------------------"
          echo -e "Gauge go v$version\n\n" > desc.txt
          release_description=$(ruby -e "$(curl -sSfL https://github.com/getgauge/gauge/raw/master/build/create_release_text.rb)" getgauge-contrib gauge-go)
          echo "$release_description" >> desc.txt
          echo "Creating new draft for release v$version"
          hub release create -d -F ./desc.txt "v$version"

          sleep 10
          rm -rf desc.txt
          echo "Start uploading assets..."
          for i in `ls $artifacts`; do
              hub release edit -m "" -a $i "v$version"
              if [ $? -ne 0 ];then
                  exit 1
              fi
          done